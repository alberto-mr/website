---
import type { Props } from 'astro';
import { site } from '../data/site';
import Head from '../components/Head.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../styles/main.css';

export interface Props {
  title?: string;
  description?: string;
  lang?: string;
}

const { title, description, lang = site.lang } = Astro.props;
---

<!DOCTYPE html>
<html lang={lang}>
  <Head title={title} description={description} />
  <body>
    <Header />
    <main aria-label="Content">
      <div>
        <slot />
      </div>
    </main>
    <Footer />
    
    <!-- Pure CSS Animations and Mobile Menu - No external dependencies -->
    <script>
      // Add scroll-triggered animation classes
      function addScrollAnimations() {
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add('animate-in');
            }
          });
        }, {
          threshold: 0.1,
          rootMargin: '0px 0px -50px 0px'
        });

        // Observe all elements with data-aos attributes
        document.querySelectorAll('[data-aos]').forEach(el => {
          observer.observe(el);
        });
      }

      // Mobile menu toggle
      function initMobileMenu() {
        const toggle = document.querySelector('.navbar-toggle');
        const menu = document.querySelector('.navbar-menu');
        
        if (toggle && menu) {
          toggle.addEventListener('click', () => {
            menu.classList.toggle('active');
            toggle.classList.toggle('active');
          });

          // Close menu when clicking on a link
          const navLinks = document.querySelectorAll('.nav-link');
          navLinks.forEach(link => {
            link.addEventListener('click', () => {
              menu.classList.remove('active');
              toggle.classList.remove('active');
            });
          });

          // Close menu when clicking outside
          document.addEventListener('click', (e) => {
            if (!toggle.contains(e.target) && !menu.contains(e.target)) {
              menu.classList.remove('active');
              toggle.classList.remove('active');
            }
          });
        }
      }

      // Initialize when DOM is ready
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => {
          addScrollAnimations();
          initMobileMenu();
        });
      } else {
        addScrollAnimations();
        initMobileMenu();
      }
    </script>
  </body>
</html>
